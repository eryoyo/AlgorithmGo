//
// Created by eryo on 2021/8/31.
//

//头结点
/*
 头结点表示数据域不存放内容，指针指向第一个数据域有内容的结点
 */

//为内存结点分配内存空间
/*
 malloc函数，stdlib.h头函数，返回类型是申请的同变量类型的指针
 node* p = (node*)malloc(sizeof(node))
 申请失败返回null
 释放内存：free(p)随后p指向null
 */
/*
 node* p = new node
 int* p = new int
 释放内存：delete(p)
 */

//在某位置插入结点表示插入后该节点所在的位置为插入位置，
//也即指定位置及其之后的结点全部后移

//当地址较小的时候可以使用静态链表来表示，
//也就是链表采用数组来表示，每一个结点的指针域指向下一个结点所在的下标

//使用静态链表解题思路-274
/*
 首先定义一个结点数组，每一个结点里面有如下几个元素
 当前结点的地址，下一个结点的地址，结点数据，xxx
 xxx按照题目设定，例如可以加一个flag表示该结点是否在链表当中
 然后通过给出的数据初始化链表，随后根据给出的链表首地址来串起链表

 */