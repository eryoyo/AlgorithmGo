//
// Created by eryo on 2021/8/31.
//

//二分法求根号2的近似值
/*
首先设定一个控制精度的值eps=1e-5
 设定之后不断每次一半的缩小区间，知道左边界和右边界的差值小于设定的精度的值
 */

//快速幂：求a的b次方模m
/*
 预处理：
 a可能在初始时大于m，那么在进入函数的时候就需要对m取模
 如果m=1，因为任何数对1取模一定等于0，所以可以专门特判
 */
/*
 使用递归的思想，先判断b是否为0假如是就返回1，
 然后判断b是奇数就返回a的b-1次方模m的结果乘以a
 如果b是偶数就先求a的b/2次方模m，之后将结果平方之后模m
 预处理：首先当m=1的时候直接返回0，a>m的时候先在外部模m
 */
/*
 迭代写法：b可以写成二进制的形式，于是a的b次方可以拆成若干个a的2的某次方的乘积
 首先设定一个结果初始值为1，然后让结果乘以a的某次方模m
 */

//双指针
/*
 解决递增序列中那两个数的和为指定数的组合
 首先创建两个指针，这两个指针分别指向序列的首和尾，然后不断向中间缩进
 */

//生成随机数
/*
 stdlib.h, time.h
 首先在main函数的开头加上srand((unsigned)time(NULL))生成随机种子
 然后使用rand()生成随机数，该数是一个大于等于零的整数
 RAND_MAX表示最大随机整数
 在快排中可以随机选择轴，具体方法是先生成下标然后将该下标的数和下标为0的交换，其他步骤相同
 */

//有几个PAT问题b1040, a1093
/*
 问题的求解时遍历数组，找到每一个A，
 可以得到每一个以该A为中间字母的PAT个数为前方P的个数乘以后方T的个数
 可以先遍历一次数组记录每个位置前方P的个数和后方T的个数
 */